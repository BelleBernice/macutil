name: macutil Preview

on:
  workflow_dispatch:
    inputs:
        tag_name:
          description: 'Tag name'
          required: true
  workflow_run:
    workflows: ["macutil Release"]
    types:
      - completed

jobs:
  generate_preview:
    runs-on: macos-latest
    environment: macutil_env
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Get tag name ( Workflow Run )
        id: latest_tag
        uses: actions/github-script@v7
        if: github.event_name == 'workflow_run'
        with:
          script: |
            const releases = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 1
            });
            if (releases.data.length === 0) {
              throw new Error('No releases found');
            }
            return releases.data[0].tag_name;

      - name: Set tag name ( Workflow Run )
        id: tag_run
        if: github.event_name == 'workflow_run'
        run: echo "tag_name=${{ steps.latest_tag.outputs.result }}" >> $GITHUB_OUTPUT

      - name: Set tag name ( Workflow Dispatch )
        id: tag_dispatch
        if: github.event_name == 'workflow_dispatch'
        run: echo "tag_name=${{ github.event.inputs.tag_name }}" >> $GITHUB_OUTPUT

      - name: Set final tag name
        id: final_tag
        run: |
          if [ "${{ github.event_name }}" == "workflow_run" ]; then
            echo "tag_name=${{ steps.tag_run.outputs.tag_name }}" >> $GITHUB_OUTPUT
          else
            echo "tag_name=${{ steps.tag_dispatch.outputs.tag_name }}" >> $GITHUB_OUTPUT
          fi

      - name: Debug environment variables
        run: |
          echo "Tag name: ${{ steps.final_tag.outputs.tag_name }}"
          echo "Event name: ${{ github.event_name }}"

      - name: Download binary
        run: |
          echo "Downloading binary for tag: ${{ steps.final_tag.outputs.tag_name }}"
          if ! curl -LO "https://github.com/${{ github.repository }}/releases/download/${{ steps.final_tag.outputs.tag_name }}/macutil-macos-arm64"; then
            echo "Failed to download binary"
            exit 1
          fi
          if [ ! -f "macutil-macos-arm64" ]; then
            echo "Binary file was not downloaded"
            exit 1
          fi

      - name: Set env
        id: branch_setup
        run: |
          chmod +x macutil-macos-arm64
          mkdir -p build
          mv macutil-macos-arm64 build/macutil
          echo "${{ github.workspace }}/build" >> $GITHUB_PATH
          # Create a safe branch name by replacing invalid characters
          branch_name=$(echo "${{ steps.final_tag.outputs.tag_name }}" | sed 's/[^a-zA-Z0-9._-]/-/g' | sed 's/\./-/g')
          echo "branch_name=$branch_name" >> $GITHUB_OUTPUT

      - name: Install system dependencies
        run: |
          # Install ffmpeg and ttyd using Homebrew
          brew install ffmpeg ttyd

      - name: Install VHS
        run: |
          # Install VHS using Homebrew (includes all dependencies)
          brew install vhs
          vhs --version

      - name: Generate preview with VHS
        run: |
          vhs .github/preview.tape

      - name: Move preview
        run: mv preview.gif .github/preview.gif

      - name: Create PR
        uses: peter-evans/create-pull-request@v7.0.8
        with:
          commit-message: Preview for ${{ steps.final_tag.outputs.tag_name }}
          branch: preview-${{ steps.branch_setup.outputs.branch_name }}
          title: "Update preview for ${{ steps.final_tag.outputs.tag_name }}"
          labels: |
            documentation
          body: |
            Automated PR to update preview gif for version ${{ steps.final_tag.outputs.tag_name }}
            ![preview](https://raw.githubusercontent.com/${{ github.repository }}/preview-${{ steps.branch_setup.outputs.branch_name }}/.github/preview.gif)
        if: success()
